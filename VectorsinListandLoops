#include <iostream>  // for cout and cin
#include <string>
#include <ctime>  //for time
#include <cstdlib>  //for rand() and srand()
#include <vector>  //for vectors
#include <algorithm> // for sort, random_shuffle, and find
using namespace std;

int main() {
    srand(time(0));
    cout << "Here is your random number: " << rand() % 2000 << ".\n";

    cout << "What program would you like to run?\n";
    cout << "Press 1 for vector exploration.\n";
    cout << "Press 2 for iterator nonsense!\n";
    int numInput = -1;
    cin >> numInput;

    if(numInput == 1) 
    {
      //our first set of code goes here.
      cout << "Lets talk about vectors!\n";
      // #include <vector>
      //build a vector of strings named inventory with a size of 0
      vector<string> inventory;

      cout << "There are " << inventory.size() << "items in my bag. \n";

      //lets add some things to our inventory!

      inventory.push_back("Sword");
      inventory.push_back("Shield");
      inventory.push_back("Axe");

      cout << "There are " << inventory.size() << " items in my bag.\n";

      cout << "The first item in my inventory is a " << inventory[0] << ".\n";
    
      cout << "Items:\n";
      //can you use a for loop to display all of yout items? (use.size())
    
      for(int i = 0; i < inventory.size(); i++) {
      cout << inventory[i] << "\n";
      // Code to be executed in the loop
     }

      // lets replace an item, then lets remove an item with pop_back().

      cout << "We don't need a shield, let's get a gun. \n";
      inventory[1] = "gun";

      cout << " also, our axe breaks!!\n";

      inventory.pop_back();   // this removes the last item from the list

      cout << "Items:\n";
      
      for(int i = 0; i < inventory.size(); i++) {
        cout << inventory[i] << "\n";
      }


    
    }// end of program 1
    else if(numInput == 2)
   {
     
    cout << numInput << "Let's talk about iterators!\n";
    // iterators point at a spot in the list (vector)

     // lets create a variable of the type vector <string>::iterator named iter
     //lets use a collection inteializer to quickly add 5 items
     vector<string> shoppingList{"Milk", "Eggs", "Candy", "Broccoli", "Parsley"};

     //lets create a variable of the type vector<string>::iterator
     vector<string>::iterator iter = shoppingList.begin();
     
     //use an asterisk * to derefence out iterator to get the value
     cout << "Here's the first item in the shipping list: " << *iter << ".\n";

  

     cout << "Here's out shopping list:\n";
     for(vector<string>::const_iterator iter = shoppingList.begin(); iter != shoppingList.end(); ++ iter) {
       
     }

     cout << "Here is the last item\n";
     
     
  } // end of program catch all else statement 
    return 0;
}
